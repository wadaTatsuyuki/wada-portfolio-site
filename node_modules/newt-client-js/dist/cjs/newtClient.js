"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("axios"),r=require("axios-retry"),t=require("qs");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=a(e),o=a(r);const i=e=>{let r={raw:"",encoded:""};e.and&&(r=(e=>{if(!e)throw new Error("invalid query");const r=[],t=[];return e.forEach((e=>{const{raw:a,encoded:n}=i(e);r.push(a),t.push(n)})),{raw:r.join("&"),encoded:t.join("&")}})(e.and),delete e.and);let a={raw:"",encoded:""};e.or&&(a=(e=>{if(!e)throw new Error("invalid query");const r=[];e.forEach((e=>{const{raw:t}=i(e);r.push(t)}));const t=new URLSearchParams;return t.set("[or]",`(${r.join(";")})`),{raw:`[or]=(${r.join(";")})`,encoded:t.toString()}})(e.or),delete e.or);const n=t.stringify(e,{encode:!1,arrayFormat:"comma"}),o=t.stringify(e,{arrayFormat:"comma"});return{raw:[n,a.raw,r.raw].filter((e=>e)).join("&"),encoded:[o,a.encoded,r.encoded].filter((e=>e)).join("&")}},s=e=>{if(!n.default.isAxiosError(e))throw e;const{config:r,response:t}=e;if(null==t||!t.data)throw e;const{data:a}=t,o={status:a.status,statusText:a.code,message:a.message};if(r&&(o.request={method:r.method,headers:r.headers},r.url)){const e=new URL(r.url,r.baseURL);o.request.url=e.toString()}const i=new Error;i.name=`${a.status} ${a.code}`;try{i.message=JSON.stringify(o,null,2)}catch{i.message=a.message}throw i};exports.createClient=({spaceUid:e,token:r,apiType:t="cdn",adapter:a,retryOnError:d=!0,retryLimit:c=3})=>{if(!e)throw new Error("spaceUid parameter is required.");if(!r)throw new Error("token parameter is required.");if(!["cdn","api"].includes(t))throw new Error(`apiType parameter should be set to "cdn" or "api". apiType: ${t}`);if(c>10)throw new Error("retryLimit should be a value less than or equal to 10.");const u=new URL(`https://${e}.${t}.newt.so`),p=n.default.create({baseURL:u.toString(),headers:{Authorization:`Bearer ${r}`},adapter:a});d&&o.default(p,{retries:c,retryCondition:e=>{var r,t;return 429===(null===(r=e.response)||void 0===r?void 0:r.status)||500===(null===(t=e.response)||void 0===t?void 0:t.status)},retryDelay:e=>1e3*e});const w=async({appUid:e,modelUid:r,query:t})=>{if(!e)throw new Error("appUid parameter is required.");if(!r)throw new Error("modelUid parameter is required.");const a=new URL(`/v1/${e}/${r}`,u.toString());if(t&&Object.keys(t).length){const{encoded:e}=i(t);a.search=e}try{const{data:e}=await p.get(a.pathname+a.search);return e}catch(e){return s(e)}};return{getContents:w,getContent:async({appUid:e,modelUid:r,contentId:t,query:a})=>{if(!e)throw new Error("appUid parameter is required.");if(!r)throw new Error("modelUid parameter is required.");if(!t)throw new Error("contentId parameter is required.");const n=new URL(`/v1/${e}/${r}/${t}`,u.toString());if(a&&Object.keys(a).length){const{encoded:e}=i(a);n.search=e}try{const{data:e}=await p.get(n.pathname+n.search);return e}catch(e){return s(e)}},getFirstContent:async({appUid:e,modelUid:r,query:t})=>{if(t&&t.limit)throw new Error("query.limit parameter cannot have a value.");const a={...t,limit:1},{items:n}=await w({appUid:e,modelUid:r,query:a});return 0===n.length?null:n[0]},getApp:async({appUid:e})=>{if(!e)throw new Error("appUid parameter is required.");const r=new URL(`/v1/space/apps/${e}`,u.toString());try{const{data:e}=await p.get(r.pathname);return e}catch(e){return s(e)}}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3dENsaWVudC5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIifQ==
